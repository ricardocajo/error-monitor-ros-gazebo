Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> operator
Rule 1     operator -> ALWAYS ( ( ( POSITION_X NAME ) > FLOAT ) AND ( ( POSITION_Y NAME ) > FLOAT ) )

Terminals, with rules where they appear

(                    : 1 1 1 1 1
)                    : 1 1 1 1 1
>                    : 1 1
ALWAYS               : 1
AND                  : 1
FLOAT                : 1 1
NAME                 : 1 1
POSITION_X           : 1
POSITION_Y           : 1
error                : 

Nonterminals, with rules where they appear

operator             : 0

Parsing method: LALR

state 0

    (0) S' -> . operator
    (1) operator -> . ALWAYS ( ( ( POSITION_X NAME ) > FLOAT ) AND ( ( POSITION_Y NAME ) > FLOAT ) )

    ALWAYS          shift and go to state 2

    operator                       shift and go to state 1

state 1

    (0) S' -> operator .



state 2

    (1) operator -> ALWAYS . ( ( ( POSITION_X NAME ) > FLOAT ) AND ( ( POSITION_Y NAME ) > FLOAT ) )

    (               shift and go to state 3


state 3

    (1) operator -> ALWAYS ( . ( ( POSITION_X NAME ) > FLOAT ) AND ( ( POSITION_Y NAME ) > FLOAT ) )

    (               shift and go to state 4


state 4

    (1) operator -> ALWAYS ( ( . ( POSITION_X NAME ) > FLOAT ) AND ( ( POSITION_Y NAME ) > FLOAT ) )

    (               shift and go to state 5


state 5

    (1) operator -> ALWAYS ( ( ( . POSITION_X NAME ) > FLOAT ) AND ( ( POSITION_Y NAME ) > FLOAT ) )

    POSITION_X      shift and go to state 6


state 6

    (1) operator -> ALWAYS ( ( ( POSITION_X . NAME ) > FLOAT ) AND ( ( POSITION_Y NAME ) > FLOAT ) )

    NAME            shift and go to state 7


state 7

    (1) operator -> ALWAYS ( ( ( POSITION_X NAME . ) > FLOAT ) AND ( ( POSITION_Y NAME ) > FLOAT ) )

    )               shift and go to state 8


state 8

    (1) operator -> ALWAYS ( ( ( POSITION_X NAME ) . > FLOAT ) AND ( ( POSITION_Y NAME ) > FLOAT ) )

    >               shift and go to state 9


state 9

    (1) operator -> ALWAYS ( ( ( POSITION_X NAME ) > . FLOAT ) AND ( ( POSITION_Y NAME ) > FLOAT ) )

    FLOAT           shift and go to state 10


state 10

    (1) operator -> ALWAYS ( ( ( POSITION_X NAME ) > FLOAT . ) AND ( ( POSITION_Y NAME ) > FLOAT ) )

    )               shift and go to state 11


state 11

    (1) operator -> ALWAYS ( ( ( POSITION_X NAME ) > FLOAT ) . AND ( ( POSITION_Y NAME ) > FLOAT ) )

    AND             shift and go to state 12


state 12

    (1) operator -> ALWAYS ( ( ( POSITION_X NAME ) > FLOAT ) AND . ( ( POSITION_Y NAME ) > FLOAT ) )

    (               shift and go to state 13


state 13

    (1) operator -> ALWAYS ( ( ( POSITION_X NAME ) > FLOAT ) AND ( . ( POSITION_Y NAME ) > FLOAT ) )

    (               shift and go to state 14


state 14

    (1) operator -> ALWAYS ( ( ( POSITION_X NAME ) > FLOAT ) AND ( ( . POSITION_Y NAME ) > FLOAT ) )

    POSITION_Y      shift and go to state 15


state 15

    (1) operator -> ALWAYS ( ( ( POSITION_X NAME ) > FLOAT ) AND ( ( POSITION_Y . NAME ) > FLOAT ) )

    NAME            shift and go to state 16


state 16

    (1) operator -> ALWAYS ( ( ( POSITION_X NAME ) > FLOAT ) AND ( ( POSITION_Y NAME . ) > FLOAT ) )

    )               shift and go to state 17


state 17

    (1) operator -> ALWAYS ( ( ( POSITION_X NAME ) > FLOAT ) AND ( ( POSITION_Y NAME ) . > FLOAT ) )

    >               shift and go to state 18


state 18

    (1) operator -> ALWAYS ( ( ( POSITION_X NAME ) > FLOAT ) AND ( ( POSITION_Y NAME ) > . FLOAT ) )

    FLOAT           shift and go to state 19


state 19

    (1) operator -> ALWAYS ( ( ( POSITION_X NAME ) > FLOAT ) AND ( ( POSITION_Y NAME ) > FLOAT . ) )

    )               shift and go to state 20


state 20

    (1) operator -> ALWAYS ( ( ( POSITION_X NAME ) > FLOAT ) AND ( ( POSITION_Y NAME ) > FLOAT ) . )

    )               shift and go to state 21


state 21

    (1) operator -> ALWAYS ( ( ( POSITION_X NAME ) > FLOAT ) AND ( ( POSITION_Y NAME ) > FLOAT ) ) .

    $end            reduce using rule 1 (operator -> ALWAYS ( ( ( POSITION_X NAME ) > FLOAT ) AND ( ( POSITION_Y NAME ) > FLOAT ) ) .)

