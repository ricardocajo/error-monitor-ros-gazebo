
sim_state = [{},{},{},{},{}]  #TODO the size could be decided somewhere
{% set callback_args = [] -%}
{% for sub in data %}
from {{ sub.library }}.msg import {{ sub.msgtype }}
sub_{{loop.index}} = rospy.Subscriber('{{ sub.topic }}', {{ sub.msgtype }})
{% do callback_args.append('sub_' ~ loop.index) -%}
{% endfor %}
def callback_func({{ callback_args | join(',') }}):
    # rotate sim_state
    for index in xrange(len(sim_state)-1):
        sim_state[index+1] = sim_state[index]
    #TODO save relevant info into sim_state[0]

time_sync = message_filters.ApproximateTimeSynchronizer([{{ callback_args | join(',') }}], queue_size=1, slop=0.1)
time_sync.registerCallback(callback_func)