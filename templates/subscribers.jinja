{% set callback_args = [] -%}
{% for sub in subscribers -%}
from {{ sub.library }}.msg import {{ sub.msgtype }}
{{ sub.sub_name }} = message_filters.Subscriber('{{ sub.topic }}', {{ sub.msgtype }})
{% do callback_args.append(sub.sub_name) -%}
{% endfor %}
def callback_func({{ callback_args | join(',') }}):
    global {% for prop in properties -%}
    {{ prop.property }}_pattern_var{{ loop.index }},{% endfor -%} sim_state
    # Rotate sim_state
    for index in range(len(sim_state)-1):
        sim_state[index+1] = sim_state[index]
    sim_state[0] = {}
    {% if sim_sub -%}
    # Update ModelStates info
    model_states_indexes = {}
    model_states_names = model_states_sub.name
    index_counter = 0
    for name in model_states_names:
        model_states_indexes[name] = index_counter
        index_counter += 1
    {% endif -%}
    {% include "save_callbacks_info.jinja" -%}
    {% include "properties_verification.jinja" %}

time_sync = message_filters.ApproximateTimeSynchronizer([{{ callback_args | join(',') }}], queue_size=1, slop=0.1, allow_headerless=True)
time_sync.registerCallback(callback_func)